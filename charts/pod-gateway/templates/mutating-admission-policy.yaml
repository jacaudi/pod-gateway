{{- include "bjw-s.common.loader.init" . -}}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicybinding-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: {{ include "bjw-s-labs.common.lib.chart.names.fullname" . | quote }}
  labels:
    {{- include "bjw-s-labs.common.lib.metadata.allLabels" . | nindent 4 }}
spec:
  policyName: {{ include "bjw-s-labs.common.lib.chart.names.fullname" . | quote }}-policy
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicy-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicy
metadata:
  name: {{ include "bjw-s-labs.common.lib.chart.names.fullname" . | quote }}-policy
spec:
  matchConstraints:
    resourceRules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["pods"]
  matchConditions:
    - name: has-annotations
      expression: 'object.metadata.annotations[{{ .Values.policy.gatewayAnnotation | quote }}] == {{ .Values.policy.gatewayAnnotationValue | quote }}'
  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
    - patchType: "JSONPatch"
      jsonPatch:
        expression: >
          [
            {
              "op": "add",
              "path": "/spec/volumes/-",
              "value": {
                "name": "config",
                "configMap": {
                  "name": "{{ .Values.configMapName }}"
                }
              }
            },
            {
              "op": "add",
              "path": "/spec/initContainers/-",
              "value": {
                "name": "route",
                "image": "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}",
                "imagePullPolicy": "{{ .Values.image.pullPolicy }}",
                "command": ["/bin/client_init.sh"],
                "securityContext": { "privileged": true },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/config",
                    "readOnly": true
                  }
                ]
              }
            },
            {
              "op": "add",
              "path": "/spec/initContainers/-",
              "value": {
                "name": "gateway",
                "image": "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}",
                "imagePullPolicy": "{{ .Values.image.pullPolicy }}",
                "command": ["/bin/client_sidecar.sh"],
                "securityContext": { "privileged": true },
                "restartPolicy": "Always",
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/config",
                    "readOnly": true
                  }
                ]
              }
            }
          ]