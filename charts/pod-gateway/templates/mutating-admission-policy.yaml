{{- include "bjw-s.common.loader.init" . -}}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicybinding-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: {{ include "bjw-s.common.lib.chart.names.fullname" . | quote }}
  labels:
    {{- include "bjw-s.common.lib.metadata.allLabels" . | nindent 4 }}
spec:
  policyName: {{ include "bjw-s.common.lib.chart.names.fullname" . | quote }}-policy
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/v1.32.0/mutatingadmissionpolicy-admissionregistration-v1alpha1.json
apiVersion: admissionregistration.k8s.io/v1alpha1
kind: MutatingAdmissionPolicy
metadata:
  name: {{ include "bjw-s.common.lib.chart.names.fullname" . | quote }}-policy
spec:
  matchConstraints:
    resourceRules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["pods"]
  matchConditions:
    - name: has-annotations
      expression: 'object.metadata.annotations["setGateway"] == "true"'
  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
    - patchType: "JSONPatch"
      jsonPatch:
        expression: >
          [
            JSONPatch{
              op: "add", path: "/spec/template/spec/initContainers",
              value: []
            },
            JSONPatch{
              op: "add", path: "/spec/template/spec/initContainers/-",
              value: Object.spec.template.spec.initContainers{
                name: "routes",
                image: {{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }},
                imagePullPolicy: {{ .Values.image.pullPolicy }},
                command: ["/bin/gateway_init.sh"],
                securityContext: { privileged: true },
                volumeMounts: [
                  Object.spec.template.spec.volumeMounts{
                    name: "config", mountPath: "/config", readOnly: true
              }
            }
          ]